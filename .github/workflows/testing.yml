name: Run Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11"]
        include:
          - os: ubuntu-latest
            path: ~/.cache/pip
          - os: macos-latest
            path: ~/Library/Caches/pip
          - os: windows-latest
            path: ~\AppData\Local\pip\Cache

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Python
        uses: conda-incubator/setup-miniconda@v3
        with:
          channels: conda-forge,defaults
          channel-priority: strict
          python-version: ${{ matrix.python-version }}
          
      - name: Install ffmpeg
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install ffmpeg
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install ffmpeg
          else
            choco install ffmpeg
          fi
        shell: bash
        
      - name: Install PyTables through Conda
        shell: bash -el {0}  # Important: activates the conda environment
        run: |
          conda install pytables==3.8.0 "numpy<2"
          
      - name: Install dependencies via Conda
        shell: bash -el {0}
        run: conda install -y "numpy>=1.26,<2.0"

      - name: Install Poetry
        run: |
          pip install --upgrade pip wheel poetry
#          poetry lock --no-cache
#          poetry install --no-root
          
      - name: Run DLC Live Tests
        run: poetry run dlc-live-test --nodisplay
