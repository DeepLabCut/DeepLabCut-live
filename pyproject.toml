[tool.poetry]
name = "deeplabcut-live"
version = "3.0.0a0"
description = "Class to load exported DeepLabCut networks and perform pose estimation on single frames (from a camera feed)"
authors = ["A. & M. Mathis Labs <admin@deeplabcut.org>"]
license = "AGPL-3.0-or-later"
readme = "README.md"
homepage = "https://github.com/DeepLabCut/DeepLabCut-live"
repository = "https://github.com/DeepLabCut/DeepLabCut-live"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Operating System :: OS Independent"
]
packages = [
    { include = "dlclive" }
]
include = ["dlclive/check_install/*"]

[tool.poetry.scripts]
dlc-live-test = "dlclive.check_install.check_install:main"
dlc-live-benchmark = "dlclive.benchmark:main"

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
numpy = ">=1.26,<2.0"
"ruamel.yaml" = "^0.17.20"
colorcet = "^3.0.0"
einops = ">=0.6.1"
Pillow = ">=8.0.0"
opencv-python-headless = ">=4.5.0,<5.0.0"
py-cpuinfo = ">=5.0.0"
tqdm = "^4.62.3"
pandas = ">=1.0.1,!=1.5.0"
tables = "^3.8"
dlclibrary = ">=0.0.6"
# PyTorch models
scipy = ">=1.9"
timm = { version = ">=1.0.7", optional = true }
torch = { version = ">=2.0.0", optional = true }
torchvision = { version = ">=0.15", optional = true }
# TensorFlow models
tensorflow = [
    { version = "^2.7.0,<=2.10", optional = true, platform = "win32" },
    { version = "^2.7.0,<=2.12", optional = true, platform = "linux" },
]
tensorflow-macos = { version = "^2.7.0,<=2.12", optional = true, markers = "sys_platform == 'darwin'" }
tensorflow-io-gcs-filesystem = [
    { version = "==0.27", optional = true, platform = "win32", python = ">=3.9,<3.11" },
    { version = "*", optional = true, platform = "linux" },
    { version = "*", optional = true, markers = "sys_platform == 'darwin'" }
]

[tool.poetry.extras]
tf = [ "tensorflow", "tensorflow-macos", "tensorflow-io-gcs-filesystem"]
pytorch = ["scipy", "timm", "torch", "torchvision"]

[tool.poetry.group.dev.dependencies]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
